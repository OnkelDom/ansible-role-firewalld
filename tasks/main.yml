---
- name: install firewalld
  package:
    name: "{{ item }}"
    state: "present"
  environment: "{{ proxy_env }}"
  with_items:
    - 'firewall-config'
    - 'firewalld'
    - 'python3-firewall'
  become: true
  tags: firewalld

- name: firewalld define services
  template:
    src: "firewalld.service.j2"
    dest: "/etc/firewalld/services/{{ item.service }}.xml"
  #changed_when: false
  register: "_firewalld_define_services"
  with_items: "{{ firewalld_services }}"
  when: firewalld_services is defined
  become: true
  tags: firewalld

- name: start and enable firewalld service
  service:
    name: "firewalld"
    state: "started"
    enabled: true
  become: true
  tags: firewalld

- name: firewalld manage zones
  firewalld:
    immediate: "{{ item['immediate']|default(omit) }}"
    interface: "{{ item['interface']|default(omit) }}"
    permanent: "{{ item['permanent']|default(false) }}"
    source: "{{ item['source']|default(omit) }}"
    state: "{{ item['state']|default(omit) }}"
    zone: "{{ item['zone'] }}"
  with_items: '{{ firewalld_zones }}'
  when: firewalld_zones is defined
  become: true
  tags: firewalld

- name: firewalld gathering zones
  command: "firewall-cmd --get-zones"
  changed_when: false
  register: "_firewalld_get_zones"
  check_mode: no
  when: firewalld_custom_zones is defined
  become: true
  tags: firewalld

- name: firewalld delete custom zones
  command: "firewall-cmd --permanent --delete-zone={{ item['zone'] }}"
  register: "_firewalld_custom_zone_deleted"
  with_items: '{{ firewalld_custom_zones }}'
  when: >
        item['zone'] in _firewalld_get_zones['stdout'] and
        not item['present'] and
        firewalld_custom_zones is defined
  become: true
  tags: firewalld

- name: firewalld create custom zones
  command: "firewall-cmd --permanent --new-zone {{ item['zone'] }}"
  register: "_firewalld_custom_zone_created"
  with_items: '{{ firewalld_custom_zones }}'
  when: >
        item['zone'] not in _firewalld_get_zones['stdout'] and
        item['present'] and
        firewalld_custom_zones is defined
  become: true
  tags: firewalld

# We need to reload the service when custom zones are create/deleted
- name: reload firewalld service
  service:
    name: firewalld
    state: reloaded
  when: >
        _firewalld_define_services or
        _firewalld_custom_zone_deleted['changed'] or
        _firewalld_custom_zone_created['changed'] and
        firewalld_custom_zones is defined
  become: true
  tags: firewalld

- name: firewalld manage rules
  firewalld:
    immediate: "{{ item['immediate']|default(omit) }}"
    interface: "{{ item['interface']|default(omit) }}"
    masquerade: "{{ item['masquerade']|default(omit) }}"
    permanent: "{{ item['permanent']|default(omit) }}"
    port: "{{ item['port']|default(omit) }}"
    service: "{{ item['service']|default(omit) }}"
    source: "{{ item['source']|default(omit) }}"
    state: "{{ item['state']|default(omit) }}"
    zone: "{{ item['zone']|default(omit) }}"
  with_items: '{{ firewalld_rules }}'
  when: firewalld_rules is defined
  notify: restart firewalld
  become: true
  tags: firewalld
